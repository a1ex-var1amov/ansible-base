- name: Deploy Rook NFS operator
  k8s:
    definition: "{{ lookup('url', item, split_lines='no') }}"
  loop:
    - '{{ rook_base_url }}/cluster/examples/kubernetes/nfs/common.yaml'
    - '{{ rook_base_url }}/cluster/examples/kubernetes/nfs/provisioner.yaml'
    - '{{ rook_base_url }}/cluster/examples/kubernetes/nfs/operator.yaml'
    - '{{ rook_base_url }}/cluster/examples/kubernetes/nfs/scc.yaml'

- name: Create directories on the {{ volume_node }} node for the volumes
  command: >
    oc debug node/{{ volume_node }} --namespace default --
      /bin/bash -c '
        set -e
        for I in $(seq 1 {{ volume_count }}); do
          DIR=/host/{{ volume_path }}/$I;
          mkdir -p $DIR;
          chown 0.0 $DIR;
          chmod 775 $DIR;
          chcon -R -t container_file_t -l s0 $DIR;
        done
      '

- name: Create Rook NFS namespace
  k8s:
    definition: "{{ lookup('template', 'rook-nfs-ns.yml') }}"

- name: Create backing PVs
  k8s:
    definition: "{{ lookup('template', 'nfs-backing-volume-pv.yml') }}"
  loop: '{{ range(1, volume_count + 1) | list }}'

- name: Create backing PVCs
  k8s:
    definition: "{{ lookup('template', 'nfs-backing-volume-pvc.yml') }}"
  loop: '{{ range(1, volume_count + 1) | list }}'

- name: Deploy Rook NFS server
  k8s:
    definition: "{{ lookup('template', item) }}"
  loop:
    - rook-nfs-server-sa.yml
    - rook-nfs-nfsserver.yml

- name: Wait until Rook NFS service shows up
  k8s_info:
    api_version: v1
    kind: Service
    name: rook-nfs
    namespace: rook-nfs
  register: rook_nfs_service
  until: rook_nfs_service.resources | length > 0
  retries: 60
  delay: 10

- name: Create PVs available for the OpenShift users
  k8s:
    definition: "{{ lookup('template', 'nfs-volume-pv.yml') }}"
  loop: '{{ range(1, volume_count + 1) | list }}'
