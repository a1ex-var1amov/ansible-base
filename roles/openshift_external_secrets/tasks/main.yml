- name: Obtain vault route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: '{{ vault_name }}'
    namespace: '{{ vault_namespace }}'
  register: vault_route

- name: Set vault URL
  set_fact:
    vault_addr: 'https://{{ vault_route.resources.0.spec.host }}'

- name: Add external-secrets chart repo
  community.kubernetes.helm.helm_repository:
    name: external-secrets
    repo_url: https://charts.external-secrets.io

- name: Deploy External Secrets chart
  community.kubernetes.helm:
    name: '{{ external_secrets_name }}'
    chart_ref: external-secrets/external-secrets
    chart_version: '{{ external_secrets_chart_version | default(omit) }}'
    release_namespace: '{{ external_secrets_namespace }}'
    create_namespace: True
    release_values:
      prometheus:
        enabled: true
        service:
          port: 8080

- name: Create HashiCorp Vault backend
  k8s:
    definition: "{{ lookup('template', 'vault-secretstore.yaml') }}"

- name: Create an external secret for testing
  k8s:
    definition: "{{ lookup('template', 'test-secret.yml') }}"

- name: Retrieve the respective secret created by the operator
  k8s_info:
    api_version: v1
    kind: Secret
    name: '{{ external_secrets_name }}-test'
    namespace: '{{ external_secrets_namespace }}'
  register: test_secret
  until: test_secret.resources | length > 0
  retries: 120
  delay: 1

- name: Fail if the secret value is not correct
  fail:
  when: (test_secret.resources.0.data.testkey | b64decode) != 'testvalue'

- name: Check if RHACM is installed on this cluster
  k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: multiclusterhubs.operator.open-cluster-management.io
  register: multiclusterhubs_crd

- name: Create external-secrets bootstrap token
  import_tasks: create_bootstrap_token.yml
  when: multiclusterhubs_crd.resources | length > 0
