- name: Obtain infrastructure info
  k8s_info:
    api_version: config.openshift.io/v1
    kind: Infrastructure
    name: cluster
    namespace: ''
  register: infrastructure

- name: Set cluster_id
  set_fact:
    ocs_cluster_id: '{{ infrastructure.resources.0.status.infrastructureName }}'

- name: Set AWS region
  set_fact:
    ocs_aws_region: '{{ infrastructure.resources.0.status.platformStatus.aws.region }}'

- name: Set AWS ami id
  set_fact:
    ocs_ami_id: '{{ aws_rhcos_ami[ocs_aws_region] }}'

- name: Add machine sets to the cluster
  k8s:
    definition: '{{ lookup("template", "ocs-machineset.yml") }}'
  with_items: '{{ ocs_availability_zones }}'

- name: Waiting since {{ lookup("pipe", "date +%r") }} for machines to come up
  k8s_info:
    api_version: machine.openshift.io/v1beta1
    kind: MachineSet
    namespace: openshift-machine-api
    name: '{{ ocs_cluster_id }}-ocs-{{ ocs_aws_region }}{{ item }}'
  register: ocs_machineset
  until:
    - ocs_machineset.resources.0.status is defined
    - ocs_machineset.resources.0.status.readyReplicas is defined
    - ocs_machineset.resources.0.status.readyReplicas == (ocs_nodes_per_zone | int)
  retries: 60
  delay: 10
  with_items: '{{ ocs_availability_zones }}'

- name: Wait for the nodes to join the cluster
  import_role:
    name: openshift_common
    tasks_from: wait_for_nodes.yml
  vars:
    expand_node_selector: node-role.kubernetes.io/ocs=
    expand_nodes_total: '{{ ocs_nodes_total }}'

#- name: Reserve the nodes for OCS pods only
#  command: oc adm taint nodes {{ item }} node.ocs.openshift.io/storage=true:NoSchedule
#  when: ((ocs_nodes.resources | selectattr('metadata.name', 'equalto', item) | first).spec.taints | default([]) | selectattr('key', 'equalto', 'node.ocs.openshift.io/storage') | first) is not defined
#  with_items: '{{ ocs_node_names }}'
